// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motosalon.Data;

namespace Motosalon.Migrations
{
    [DbContext(typeof(MotoContext))]
    partial class MotoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Motosalon.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BoughtMotoId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasAlternateKey("PhoneNumber");

                    b.HasIndex("BoughtMotoId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Motosalon.Mototransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mototransports");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Mototransport");
                });

            modelBuilder.Entity("Motosalon.Motorcycle", b =>
                {
                    b.HasBaseType("Motosalon.Mototransport");

                    b.Property<string>("TypeMotorcycle")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Motorcycle");
                });

            modelBuilder.Entity("Motosalon.Scooter", b =>
                {
                    b.HasBaseType("Motosalon.Mototransport");

                    b.Property<string>("TypeScooter")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Scooter");
                });

            modelBuilder.Entity("Motosalon.Client", b =>
                {
                    b.HasOne("Motosalon.Mototransport", "BoughtMoto")
                        .WithMany("Clients")
                        .HasForeignKey("BoughtMotoId");
                });
#pragma warning restore 612, 618
        }
    }
}
